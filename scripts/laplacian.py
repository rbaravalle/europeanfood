import Image
import numpy as np
import scipy.signal
import mfs

#MFS of Laplacion
def laplacian(filename,extra):    
    #Compute Gradient

    # :s, conv2d matlab function...
    f = np.array([[-0.0029690,  -0.0162752,  -0.0382135,  -0.0485507,  -0.0382135,  -0.0162752,  -0.0029690],[-0.0162752,  -0.0624946,  -0.0897184,  -0.0686955,  -0.0897184,  -0.0624946,  -0.0162752], [-0.0382135,  -0.0897184,   0.0448730,   0.2599999,   0.0448730,  -0.0897184,  -0.0382135], [-0.0485507,  -0.0686955,   0.2599999,   0.6650041,   0.2599999,  -0.0686955,  -0.0485507], [-0.0382135,  -0.0897184,   0.0448730,   0.2599999,   0.0448730,  -0.0897184,  -0.0382135], [-0.0162752,  -0.0624946,  -0.0897184,  -0.0686955,  -0.0897184,  -0.0624946,  -0.0162752], [-0.0029690,  -0.0162752,  -0.0382135,  -0.0485507,  -0.0382135,  -0.0162752,  -0.0029690]])

    IM = Image.open(filename)
    IM = IM.convert("L")
    a = scipy.signal.convolve2d(IM, f,mode="full")
    Nx, Ny = a.shape
    a = a[3:Nx-3,3:Ny-3]
    a = np.floor((a<0).choose(a,0))
    extra[3] = False
    return mfs.mfs(a,extra)

